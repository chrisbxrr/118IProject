import streamlit as st
import folium
from streamlit_folium import st_folium
import pandas as pd
import numpy as np

# App title and setup
st.set_page_config(page_title="Pothole Reporter", layout="wide")
st.title("üöß Pothole Reporting App")

st.markdown("""
Click on the map to select a location where you've encountered a pothole or road hazard.  
Then provide a brief description and submit your report.
""")

# Set a default location for the map (San Jose, California)
default_location = [37.3382, -121.8863]  # Coordinates for San Jose, California

# Function to send notification with map location
def send_notification_with_map(obstacle_description, latitude, longitude):
    """
    Simulates sending a notification with the provided location and description.
    
    Parameters:
    - obstacle_description (str): Description of the detected obstacle or hazard.
    - latitude (float): Latitude of the hazard location.
    - longitude (float): Longitude of the hazard location.
    
    Returns:
    - None
    """
    st.warning(f"‚ö†Ô∏è Alert: {obstacle_description}")
    st.write(f"üìç Hazard Location: ({latitude}, {longitude})")

# Create the map
m = folium.Map(location=default_location, zoom_start=13)

# Generate sample data with pothole locations
df = pd.DataFrame(
    np.random.randn(100, 2) / [50, 50] + [37.76, -122.4],
    columns=["lat", "lon"],
)

# Add markers for each location in the dataframe
for _, row in df.iterrows():
    folium.Marker([row["lat"], row["lon"]], popup="Pothole reported").add_to(m)

# Render the map and capture user interaction
map_data = st_folium(m, width=700, height=500, returned_objects=["last_clicked"])

# If user clicks on the map
if map_data["last_clicked"] is not None:
    clicked_lat = map_data["last_clicked"]["lat"]
    clicked_lon = map_data["last_clicked"]["lng"]

    st.success(f"üìç Selected Location: ({clicked_lat:.5f}, {clicked_lon:.5f})")

    # Get user description of the pothole
    description = st.text_area("üìù Describe the pothole or hazard:")

    # Submit button
    if st.button("Submit Report"):
        # In a real app, save to a database, send to backend, etc.
        st.success("‚úÖ Pothole report submitted!")
        st.write(f"**Location:** ({clicked_lat:.5f}, {clicked_lon:.5f})")
        st.write(f"**Description:** {description}")
else:
    st.info("Click on the map above to start reporting a pothole.")

    # Simulate an obstacle (this could be dynamic)
    obstacle = "Flooded underpass on 4th Street near the metro station."
    send_notification_with_map(obstacle, latitude=37.7749, longitude=-122.4194)
